import os
from torchvision.datasets import ImageFolder
import torchvision.transforms as transforms

# Define the data directory and the transformations to apply to the images
data_dir = '/path/to/your/data/folder'
transform = transforms.Compose([
    transforms.Resize((224, 224)),  # Resize the images to the same size
    transforms.ToTensor(),  # Convert the images to PyTorch tensors
])

# Create the ImageFolder datasets and label them accordingly
dataset = ImageFolder(root=data_dir, transform=transform, 
                      loader=default_loader, 
                      is_valid_file=lambda x: x.endswith('.jpg'))

# Create a dictionary to map class indices to class names
classes = ['class_0', 'class_1', 'class_2', 'class_3', 'class_4', 'class_5']
class_to_idx = {classes[i]: i for i in range(len(classes))}

# Print the class indices and the number of images in each class
print(dataset.class_to_idx)
print(dataset.class_to_idx.values())

# Create the data loader to load the images in batches
batch_size = 32
data_loader = torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)
